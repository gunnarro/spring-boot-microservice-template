spring.application.name=my-microservice
server.servlet.application-display-name=my-microservice

spring.security.user.name=nimbus
spring.security.user.password=nimbus1234
spring.security.user.roles=USER

jasypt.encryptor.password=${JASYPT_PASSWORD}
jasypt.encryptor.algorithm=PBEWITHHMACSHA512ANDAES_256

server.use-forward-headers=true
swagger.ui.enabled=true

# Using ssl configuration means the application no longer supports a plain HTTP connector at server port
# SSL Configuration, Support only SSL 1.2, Disabled
# ----------------------
server.port=9999
server.ssl.enabled=true
server.ssl.key-store=config/cdk-spring-server-identity.jks
server.ssl.key-store-password=ENC(6NHGb7gUhmTR9vHSsnZM7SRfRt2ST7BSXHOXFvv4FQ6Elw132CnXL+jaHjCEVx+IdmEzXC++ZfeQraJwUmq/NQ==)
server.ssl.key-password=ENC(QODxU1dTiVqDJSm4wPH6VuKpvCdWYT4hq8/KI80HLIOrAtMs25W2c0+950QRz5JZVh9u5gPQrSxAL0j337YR6w==)
server.ssl.key-alias=nimbus

# ssl ciphers
# Note! weblogic osb services may have problem using listed chiper suites, suites, so ciphers must be comment out such cases 
server.ssl.ciphers=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256

# ssl protocol to use.
server.ssl.protocol=TLS

# Enabled ssl protocols.
server.ssl.enabled-protocols=TLSv1.2
# ------------------------------------

info.app.name=Nimbus MicroService my-microservice
info.app.description=
info.app.version=1.0-SNAPSHOT

management.server.port=9998
management.server.ssl.enabled=false
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true

# swagger
springfox.documentation.swagger.v2.path=/api-docs

# Rest client http connection pool
# The maximum number of connections to a particular host
http.connectionpool.max-per-route=200
# The maximum total number of connections in the pool
http.connectionpool.max-threads=200
# The maximum idle timeout for a connection, given in seconds
http.connectionpool.idle-timeout=30

# server settings
# Session timeout. If a duration suffix is not specified, seconds will be used.
server.servlet.session.timeout=60
server.tomcat.connection-timeout=5000
# Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=200
# Maximum number of connections that the server accepts and processes at any given time.
server.tomcat.max-connections=200
# Maximum amount of worker threads.
server.tomcat.threads.max=250
#server.tomcat.min-spare-threads=10
# Enable Micrometer metrics for Tomcat
server.tomcat.mbeanregistry.enabled=true

# request log filter
request.log.filter.IncludeQueryString=true
request.log.filter.IncludePayload=false
request.log.filter.MaxPayloadLength=10000
request.log.filter.IncludeHeaders=true
request.log.filter.IncludeClientInfo=true
# performance log endpoint advisor
performance.log.pointcut.expression=execution(public * org.gunnarro.microservice.mymicroservice.*.*(..))