<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.gunnarro.microservice</groupId>
		<artifactId>spring-boot-microservice-common-pom</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<groupId>org.gunnarro.microservice</groupId>
	<artifactId>my-microservice</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>my-microservice</name>
	<description></description>

	<organization>
		<name>gunnarro as</name>
		<url>https://gunnarro-web.azurewebsites.net/</url>
	</organization>

	<!-- A good rule of thumb is, if the person should not be contacted about the project, they need not be listed here. -->
	<developers>
		<developer>
			<name></name>
			<email></email>
			<organization>gunnarro as</organization>
			<roles>
				<role>maintainer</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<mariadb.version>2.5.3</mariadb.version>
	</properties>

	<!-- Run integration test only: -->
	<!-- mvn clean verify -Pintegration-test -->
	<!-- Run unit test only: --><!-- mvn clean verify -->
	<!-- mvn clean install -Dskip.integrationtests=false -->
	<!-- Check for new dependency versions: -->
	<!-- mvn versions:display-dependency-updates -DprocessDependencyManagement=false -DprocessDependencies=true -->
	<build>
		<!-- Note! The order of the plugins declaration may have impact on the result -->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- must be after spring-boot-maven-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/bin.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<SERVER_IDENTITY_KEYSTORE_PATH>src/main/resources/gunnarro-microservice.jks</SERVER_IDENTITY_KEYSTORE_PATH>
						<SERVER_IDENTITY_KEYSTORE_PASS>test</SERVER_IDENTITY_KEYSTORE_PASS>
						<SERVER_IDENTITY_KEYSTORE_ALIAS>gunnarro-microservice</SERVER_IDENTITY_KEYSTORE_ALIAS>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<!-- The failsafe plugin is used for integration tests only -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<!-- exclude logback, we use log4j2 due to better performance -->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- exclude logback, we use log4j2 due to better performance -->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- Needed for Async Logging with Log4j 2 -->
		<!-- <dependency> <groupId>com.lmax</groupId> <artifactId>disruptor</artifactId> <version>${jtds.version}</version> </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- This starter provides a version of Hibernate Validator compatible with the current Spring Boot. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- for monitoring health, env api -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- JDBC -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- Micrometer Prometheus registry for monitoring purpose -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- apache -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<!-- servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<!-- For performance logging, method profiling -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- For swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- for test -->
		<!-- ================= -->
		<!-- Test dependencies -->
		<!-- ================= -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>ch.vorburger.mariaDB4j</groupId>
			<artifactId>mariaDB4j-springboot</artifactId>
			<version>${mariadb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${mariadb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.vorburger.mariaDB4j</groupId>
			<artifactId>mariaDB4j</artifactId>
			<version>${mariadb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.vorburger.mariaDB4j</groupId>
			<artifactId>mariaDB4j-core</artifactId>
			<version>${mariadb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
        	<groupId>org.junit.jupiter</groupId>
        	<artifactId>junit-jupiter-engine</artifactId>
        	<scope>test</scope>
        </dependency>
	</dependencies>
	
	<profiles>
        <profile>
            <!-- only for build and test microservice from github actions -->
            <id>github</id>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <name>GitHub Packages</name>
                    <url>https://maven.pkg.github.com/gunnarro/microservice-archetype</url>
                </repository>
            </distributionManagement>
        </profile>
       <profile>
           <id>archetype</id>
       </profile>
    </profiles>
</project>
